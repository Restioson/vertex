syntax = "proto3";
package vertex.structures;

import "types.proto";

message CommunityStructure {
    types.CommunityId id = 1;
    string name = 2;
    string description = 4;
    repeated RoomStructure rooms = 3;
}

message RoomStructure {
    types.RoomId id = 1;
    string name = 2;
    bool unread = 3;
}

message MessageConfirmation {
    types.MessageId id = 1;
    // UTC unix timestamp
    int64 time_sent = 4;
}

message Message {
    types.MessageId id = 1;
    types.UserId author = 2;
    uint32 author_profile_version = 3;
    // UTC unix timestamp
    int64 time_sent = 4;
    // Option<T>
    oneof content {
        string present = 6;
    }
}

message Edit {
    types.MessageId message = 1;
    types.CommunityId community = 2;
    types.RoomId room = 3;
    string new_content = 4;
}

message Delete {
    types.MessageId message = 1;
    types.CommunityId community = 2;
    types.RoomId room = 3;
}

message MessageHistory {
    repeated Message messages = 1;
}

message RoomUpdate {
    types.MessageId last_read = 1;
    MessageHistory new_messages = 2;
    bool continuous = 3;
}

message ClientReady {
    types.UserId user = 1;
    Profile profile = 2;
    repeated CommunityStructure communities = 3;
    int64 permission_flags = 4;
    int64 admin_permission_flags = 5;
}

message Profile {
    uint32 version = 1;
    string username = 2;
    string display_name = 3;
}

message Credentials {
    string username = 1;
    string password = 2;
}

message TokenCreationOptions {
    // Option<T>
    oneof device_name {
        string device_name_present = 1;
    }
    // Option<T>
    oneof expiration_datetime {
        // UTC unix timestamp
        int64 expiration_datetime_present = 2;
    }
    int64 permission_flags = 3;
}
