syntax = "proto3";
package vertex.events;

import "types.proto";
import "structures.proto";
import "responses.proto";

message ServerMessage {
    oneof message {
        ServerEvent event = 1;
        responses.Response response = 2;
        types.None malformed_message = 3;
        RateLimited rate_limited = 4;
        types.None timed_out = 5;
    }
}

message RateLimited {
    uint32 ready_in_ms = 1;
}

message ServerEvent {
    oneof event {
        structures.ClientReady client_ready = 1;
        AddMessage add_message = 2;
        NotifyMessageReady notify_message_ready = 3;
        structures.Edit edit = 4;
        structures.Delete delete = 5;
        types.None session_logged_out = 6;
        AddRoom add_room = 7;
        structures.CommunityStructure add_community = 8;
        RemoveCommunity remove_community = 9;
        types.None internal_error = 10;
        int64 admin_permissions_changed = 11;
    }
}

message RemoveCommunity {
    types.CommunityId id = 1;
    RemoveCommunityReason reason = 2;
}

message AddRoom {
    types.CommunityId community = 1;
    structures.RoomStructure structure = 2;
}

message AddMessage {
    types.CommunityId community = 1;
    types.RoomId room = 2;
    structures.Message message = 3;
}

message NotifyMessageReady {
    types.CommunityId community = 1;
    types.RoomId room = 2;
}

enum RemoveCommunityReason {
    Deleted = 0;
}
