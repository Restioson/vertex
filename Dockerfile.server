FROM rust:slim as build

WORKDIR /vertex/server
RUN apt-get update && apt-get install libssl-dev pkg-config -y
COPY server/Cargo.* .
COPY common/ ../common/

# Build deps except for vertex_common
RUN mkdir src/ && rustc --version && echo "fn main() {}" > src/main.rs \
    && sed -i 's/vertex_common/#vertex_common/g' Cargo.toml && cargo build --release

# Build vertex_common
RUN sed -i 's/#vertex_common/vertex_common/g' Cargo.toml && cargo build --release && rm src/main.rs

# Build project
COPY server/src src
RUN touch src/main.rs && cargo build --release

# Run
FROM debian:stretch

RUN echo "Installing psql" && apt-get update > /dev/null && apt-get install postgresql-client -y > /dev/null && \
    rm -r /var/lib/apt/lists/* && echo "psql installed"
COPY --from=build /vertex/server/target/release/vertex_server ./vertex_server

# Copy config files
COPY server/docker/db.conf db.conf
COPY server/docker/cert.pem /root/.config/vertex_server/cert.pem
COPY server/docker/key.pem /root/.config/vertex_server/key.pem
# Dummy file is copied to allow for the config.toml to be copied only if it is present
COPY server/docker/.dummy.ignore server/docker/config.tom[l] /root/.config/vertex_server/

COPY wait-for-postgres.sh .
EXPOSE 8080/tcp
CMD ["./wait-for-postgres.sh", "db", "5342", "./vertex_server", "0.0.0.0:8080"]
